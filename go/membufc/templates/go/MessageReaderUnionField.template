type {{.MessageName}}{{.UnionName}} uint16
{{$UnionName := .UnionName}}{{$UnionNum := .UnionNum}}{{$ParentFieldIndex := .FieldIndex}}
const (
{{- range .UnionFields}}
	{{.MessageName}}{{$UnionName}}{{.FieldName}} {{.MessageName}}{{$UnionName}} = {{.FieldIndex -}}
{{end}}
)

func (x *{{.MessageName}}) {{.UnionName}}() {{.MessageName}}{{.UnionName}} {
	return {{.MessageName}}{{.UnionName}}(x._message.GetUint16({{.FieldIndex}}))
}

{{- range .UnionFields}}

func (x *{{.MessageName}}) Is{{$UnionName}}{{.FieldName}}() bool {
	is, _ := x._message.IsUnionIndex({{$ParentFieldIndex}}, {{$UnionNum}}, {{.FieldIndex}})
	return is
}

{{if not .IsMessage -}}
func (x *{{.MessageName}}) {{$UnionName}}{{.FieldName}}() {{.FieldGoType}} {
	_, off := x._message.IsUnionIndex({{$ParentFieldIndex}}, {{$UnionNum}}, {{.FieldIndex}})
	return {{if .IsEnum}}{{.FieldGoType}}({{end}}x._message.Get{{.TypeAccessor}}InOffset(off){{if .IsEnum}}){{end}}
}

func (x *{{.MessageName}}) Mutate{{$UnionName}}{{.FieldName}}(v {{.FieldGoType}}) error {
	is, off := x._message.IsUnionIndex({{$ParentFieldIndex}}, {{$UnionNum}}, {{.FieldIndex}})
	if !is {
		return &membuffers.ErrInvalidField{}
	}
	x._message.Set{{.TypeAccessor}}InOffset(off, {{if .IsEnum}}uint16({{end}}v){{if .IsEnum}}){{end}}
	return nil
}
{{- else -}}
func (x *{{.MessageName}}) {{$UnionName}}{{.FieldName}}() *{{.FieldGoType}} {
	_, off := x._message.IsUnionIndex({{$ParentFieldIndex}}, {{$UnionNum}}, {{.FieldIndex}})
	b, s := x._message.GetMessageInOffset(off)
	return {{.FieldGoType}}Reader(b[:s])
}
{{- end -}}{{end}}

func (x *{{.MessageName}}) Raw{{.UnionName}}() []byte {
	return x._message.RawBufferForField({{.FieldIndex}}, {{.UnionNum}})
}

